[
	{
		"code": "io.sarl.sre.IssueCodes.cannot_emit_in_space",
		"message": "Cannot emit the event '*event-type*' with the scope '*scope*': *error*",
		"cause": "The given event cannot be emitted into a space because of an internal error",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.null_agent_task",
		"message": "Agent task is null",
		"cause": "The reference to an agent task is lost. This avoid the task to be run. This error should never occur",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.agent_task_already_launched",
		"message": "Already launched task",
		"cause": "A task was launched two times. This error denotes of a problem of design of the agent software",
		"solution": "Review your code to avoid the task to be launched too times",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.service_manager_error",
		"message": "Failure in service *name*",
		"cause": "An internal error into the Janus service manager has occurred. The error is related to the service with the given *name*",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.spawn_error",
		"message": "Cannot instantiate an agent of type *type-name* due to the following: *error*",
		"cause": "An internal error avoid an agent of the given *type-name* to be created and launched",
		"solution": "Review the given *error* and fix your agent software accordingly",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.disabled_spawn",
		"message": "The spawning of the agents is disabled. The spawning of *agent-type* inside *context* is skipped",
		"cause": "An agent spawn query was received, but rejected because the agent life-cycle service has disabled its spawning service. It is usually due to the fact that Janus has already started to shutdown",
		"solution": "Review you code in order to avoid to spawn an agent after all the exisiting agents have been killed",
		"level": "warning"
	},
	{
		"code": "io.sarl.sre.IssueCodes.not_killable_error",
		"message": "Cannot kill agent *id* because it is considered as not killable",
		"cause": "The agent with the given *id* cannot be killed. Usually, it is because it is a holon that contains sub-holons",
		"solution": "Review your code to avoid the killing of the sub-holon when it is not empty",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.not_alive_error",
		"message": "Cannot kill agent *id* because it is not alive",
		"cause": "The agent with the given *id* cannot be killed because it is already dead",
		"solution": "Review your code to avoid the call to `killMe` too many times",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.invalid_sarl_specification",
		"message": "The SARL specification version that was used for generating the type *name* is not compatible with the specification version supported by Janus",
		"cause": "Internally, Janus checks if the provided class of an agent to be launched was generated with a version of the SARL compiler that is supported by the current version of Janus. This error message is generated when the class to be loaded is not compatible",
		"solution": "Get agent's binary files that are compiled with the compatible SARL compiler",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.task_cancel",
		"message": "Task with the id '*id*' and the name '*name*' was cancelled",
		"cause": "A task was detected as cancelled by the thread execution service. This error should never occur, except if you have manually cancelled an agent task during its execution",
		"level": "warning"
	},
	{
		"code": "io.sarl.sre.IssueCodes.task_interrupt",
		"message": "Task with the id '*id*' and the name '*name*' was interrupted",
		"cause": "A task was detected as interrupted by the thread execution service. This error should never occur, except if the thread associated to the agent task was interrupted programmatically",
		"level": "warning"
	},
	{
		"code": "io.sarl.sre.IssueCodes.task_error",
		"message": "Uncaught exception: *error*\nin thread #*task-id* '*task-name'",
		"cause": "This error message is displayed when an agent task has encountered an *error*.",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.task_reject",
		"message": "Rejected task due to lack of resources or service shutdown: *task*",
		"cause": "This warning message is generated when an agent task is rejected by the internal thread execution service. Most of the time, the reason of the rejection is because there is not more space in the queue of tasks to be run. By default, when a task is rejected to be executed into a thread, Janus assumes that the tasks could be run into the current thread, and it is running the task. Consequently, this warning should be considered in order to detect internal bugs in your software",
		"solution": "x",
		"level": "warning"
	},
	{
		"code": "io.sarl.sre.IssueCodes.event_guard_error",
		"message": "Invalid argument for the event guard evaluator method: {1}",
		"cause": "Event guards are evaluated into dedicated Java functions by Janus. This error message is generated when one of the arguments of the guard evaluation function is invalid. Usually, it is because the event cannot be passed to the function",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.event_guard_error",
		"message": "Event guard evaluator method becomes inaccessible: {1}",
		"cause": "Event guards are evaluated into dedicated Java functions by Janus. This error message is generated when the guard evaluation function cannot be called due to access restrictions. This error should never occur because it means that the Janus code itself is broken",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.cli_argument_list_size",
		"message": "Not enough arguments. You have to provide the qualified name of the agent to be launched",
		"cause": "This error is generated when the number of commend-line arguments that are passed to Janus is too small, in the case that Janus is supposed to launch an agent. The missed argument is the fully-qualified name of the agent to be launched",
		"solution": "Add to the command-line the fully-qualified name of the agent to be launched",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.cli_argument_list_size",
		"message": "Too many arguments. You must not provide arguments",
		"cause": "This error is generated when the number of commend-line arguments that are passed to Janus is too big, in the case that Janus is not supposed to launch an agent.",
		"solution": "Remove all the command-line arguments",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.universe_creation",
		"message": "Cannot create the universe context: *cause*",
		"cause": "Something avoid the Janus framework to be started and create the root context of the application. The cause of the error is provided",
		"level": "error"
	},
	{
		"code": "io.sarl.sre.IssueCodes.universe_creation",
		"message": "Cannot create the universe context",
		"cause": "Something avoid the Janus framework to be started and create the root context of the application. The cause of the error is unknown",
		"level": "error"
	}
]

