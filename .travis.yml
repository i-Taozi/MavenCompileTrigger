dist: focal
language: generic
sudo: required
arch: arm64-graviton2
virt: vm
group: edge
addons:
  apt:
    update: true
    packages: [openjdk-8-jdk, maven, unzip]
matrix:
  fast_finish: true
  include:
  - {env: PHASE=tests}
  - {env: PHASE=build_checkstyle_protobuf}
cache:
  directories: [$HOME/.m2, $HOME/protobuf]
before_install:
- export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-arm64"
- export PATH="$JAVA_HOME/bin:$PATH"
- java -version
- mvn -version
- git fetch --unshallow
- |
  if [ $PHASE = "build_checkstyle_protobuf" ]; then \
    sudo apt-get install -y libboost-all-dev libzookeeper-mt-dev libsasl2-dev cmake libcppunit-dev checkinstall && \
    pushd .. && \
    if [ -f $HOME/protobuf/protobuf_3.16.1* ]; then \
      sudo dpkg -i $HOME/protobuf/protobuf_3.16.1*; \
    else \
      wget https://github.com/protocolbuffers/protobuf/releases/download/v3.16.1/protobuf-java-3.16.1.zip && \
      unzip protobuf-java-3.16.1.zip && pushd protobuf-3.16.1 && \
      ./configure && sudo make && sudo checkinstall -y && \
      if [ ! -d $HOME/protobuf ]; then \
        mkdir -p $HOME/protobuf; \
      fi && \
      mv protobuf_3.16.1* $HOME/protobuf/ && popd; \
    fi && \
    sudo ldconfig && popd; \
  fi
install:
- |
  if [ $PHASE = "tests" ]; then \
    mvn install --batch-mode --no-transfer-progress \
      -DexcludedGroups="org.apache.drill.categories.SlowTest,org.apache.drill.categories.UnlikelyTest,org.apache.drill.categories.SecurityTest"; \
  elif [ $PHASE = "build_checkstyle_protobuf" ]; then \
    MAVEN_OPTS="-Xms1G -Xmx1G" mvn install --no-transfer-progress -Drat.skip=false -Dlicense.skip=false --batch-mode -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -DskipTests=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true && \
    pushd protocol && mvn process-sources -P proto-compile && popd && \
    mkdir contrib/native/client/build && pushd contrib/native/client/build && /usr/bin/cmake -G "Unix Makefiles" .. && make cpProtobufs && popd; \
  fi
script:
- |
  if [ "$(git status -s | grep -c "")" -gt 0 ]; then \
    echo "The following changes are found in files after regenerating protobufs (output may be used as a patch to apply):" >&2 &&
    echo "$(git diff --color)" && \
    exit 1; \
  else
    echo "All checks are passed!";
  fi
branches:
  only: [apache/drill-2301-origin]
