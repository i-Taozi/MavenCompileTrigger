language: java
services: docker
git: {depth: false}
jdk: oraclejdk11
jobs:
  include:
  - env: [JSQL_DOCKERFILE=3.8.1-jdk-11-slim, MAVEN_NASHORN=-Dnashorn.args=--no-deprecation-warning]
  - env: [JSQL_DOCKERFILE=3.8.1-openjdk-15-slim, MAVEN_NASHORN=]
branches:
  only: [ron190/jsql-injection-95337-MAVEN_PARALLEL_EXECUTION]
cache:
  directories: [$HOME/.m2, $HOME/.sonar/cache]
before_script:
- |
  env | sort
  sudo cat /proc/meminfo
  java -XX:+PrintFlagsFinal -version | grep -iE 'HeapSize|PermSize|ThreadStackSize'

  # Prevent error 'You have reached your pull rate limit' with dedicated user
  echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  docker-compose -f ./model/src/test/resources/docker/docker-compose.yml build --parallel
  docker-compose -f ./model/src/test/resources/docker/docker-compose.yml up -d
  ./model/src/test/resources/docker/healthcheck/healthcheck.sh
  ./model/src/test/resources/docker/script/buff.sh
  ./model/src/test/resources/docker/script/verify.sh

  docker rmi jsql:latest -f
  docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f model/src/test/resources/docker/Dockerfile.jsql .
script:
- "docker run                                          \\\n-t                    \
  \                              \\\n--rm                                        \
  \        \\\n-v \"$HOME/.m2\":/root/.m2                            \\\n-v \"$HOME/.sonar/cache\"\
  :/root/.sonar/cache          \\\n--network docker_jsql-network                 \
  \      \\\n-e SONAR_TOKEN                                      \\\n-e CODACY_PROJECT_TOKEN\
  \                             \\\n-e CODECOV_TOKEN                             \
  \       \\\n-e MAVEN_NASHORN                                    \\\njsql:latest\
  \                                         \\\n./model/src/test/resources/vnc/execute-on-vnc.sh\
  \    \\\nbash -c '                                           \\\n    java -version\
  \                                   \\\n    && env|sort                        \
  \             \\\n    && mvn clean verify sonar:sonar                 \\\n    &&\
  \ (cd view/ ; mvn sonar:sonar)                 \\\n    && (cd model/ ; mvn sonar:sonar)\
  \                \\\n    && (bash <(curl -s https://codecov.io/bash) || true)  \
  \           \\\n    && (bash <(curl -Ls https://coverage.codacy.com/get.sh) || true)\
  \ \\\n' \n\nDOCKER_RUN=\"$?\"\necho docker run exit code: $DOCKER_RUN\nif [ \"${DOCKER_RUN}\"\
  \ != \"0\" ]; then exit 1; fi\n"
- ./model/src/test/resources/docker/script/verify.sh
