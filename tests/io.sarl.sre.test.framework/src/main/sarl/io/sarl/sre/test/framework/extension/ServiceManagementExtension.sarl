/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2021 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.test.framework.^extension

import com.google.common.util.concurrent.Service
import com.google.common.util.concurrent.Service.State

/**
 * JUnit 5 extension that is saving and restoring system properties.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.11
 */
final class ServiceManagementExtension {

	private new {
	}

	/** Start the given service manually.
	 * 
	 * @param service the service to start.
	 */
	@SuppressWarnings("discouraged_reference")
	static def startServiceManually(service : Service) {
		service.startAsync
		var state = service.state
		while (state !== null && state !== State::STOPPING && state !== State::FAILED && state !== State::RUNNING) {
			try {
				Thread::sleep(1)
			} catch (e : Throwable) {
				// Ignore any exception
			}
			state = service.state
		}
		if (state === State::FAILED) {
			throw new RuntimeException(service.failureCause)
		}
	}

}
